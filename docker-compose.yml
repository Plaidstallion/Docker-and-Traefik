# start up with 'docker-compose up -d' to start in background
# update images with 'docker-compose pull' but watchtower is doing this.
# Use 'docker-compose up --detach --build' & 'docker-compose up --detach --build <app>' to not have to up/down.

version: '3'

#need to perform a 'docker network create proxy' & 'docker network create mainstack'
networks: 

  mainstack:
    external: true
  proxy:
      external: true

  guacnetwork:
    internal: true
  ncdb:
    internal: true

services:

######The Front End######

  traefik:
    image: traefik:chevrotin
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
      - 8083:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $USERDIR/docker/traefik/data/traefik.yml:/traefik.yml:ro
      - $USERDIR/docker/traefik/configurations:/configurations:ro
      - $USERDIR/docker/traefik/data/acme.json:/acme.json
      - $USERDIR/docker/traefik/log/access.log:/log/access.log
      - $USERDIR/docker/traefik/log/traefik.log:/log/traefik.log
    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
    labels:
      - "traefik.http.routers.traefik-secure.service=api@internal"

#  authelia:
#    container_name: authelia
#    image: authelia/authelia:latest
#    restart: unless-stopped
#    networks:
#      - proxy
#    expose:
#      - 9091
#    volumes:
#      - $USERDIR/docker/authelia/authelia:/var/lib/authelia
#      - $USERDIR/docker/authelia/configuration.yml:/etc/authelia/configuration.yml:ro
#      - $USERDIR/docker/authelia/users_database.yml:/etc/authelia/users_database.yml
#      - $USERDIR/docker/authelia/notification.txt:/tmp/authelia/notification.txt
#    environment:
#      - TZ=$TZ
#      - UID=$PUID
#      - GID=$PGID
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.authelia.entrypoints=websecure"
#      - "traefik.http.routers.authelia.middlewares=chain-authelia@file"

  oauth:
    container_name: oauth
    image: thomseddon/traefik-forward-auth:latest
    restart: unless-stopped
    networks:
      - proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - CLIENT_ID=$GOOGLE_CLIENT_ID
      - CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - SECRET=$OAUTH_SECRET
      - COOKIE_DOMAIN=$DOMAINNAME
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.$DOMAINNAME
      - URL_PATH=/_oauth
      - WHITELIST=$CLOUDFLARE_EMAIL
      - LOG_LEVEL=warn
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days
      - DEFAULT_ACTION=auth
      - DEFAULT_PROVIDER=google
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth.entrypoints=websecure"
      - "traefik.http.routers.oauth.middlewares=chain-oauth@file"
      - "traefik.http.services.oauth.loadbalancer.server.port=4181"

######Admin-y Type Stuff######

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_SCHEDULE=0 0 1 * * *
      - WATCHTOWER_CLEANUP=true
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped

  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $USERDIR/docker/ddclient:/config
    restart: unless-stopped

  librespeed:
    image: linuxserver/librespeed:latest
    container_name: librespeed
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    environment:
      - TZ=$TZ
      - DB_TYPE=sqlite
    labels: 
      - traefik.enable=true
      - traefik.http.routers.librespeed.entrypoints=websecure
#      - traefik.http.routers.librespeed.rule=(Host(`$DOMAINNAME`) && Path(`/librespeed`))
#      - traefik.http.routers.librespeed.rule=(Host(`librespeed.$DOMAINNAME`)) || (Host(`$DOMAINNAME`) && Path(`/librespeed`))
#      - traefik.http.routers.librespeed.middlewares=chain-oauth@file
      - traefik.http.routers.librespeed.middlewares=chain-oauth@file
    ports:
      - 8085:80
    restart: unless-stopped

#  portainer:
#    image: portainer/portainer:latest
#    container_name: portainer
#    security_opt:
#      - no-new-privileges:true
#    networks:
#      - mainstack
#    ports:
#      - 9000:9000
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - $USERDIR/docker/portainer:/data
#    restart: unless-stopped

  duplicati:
    image: linuxserver/duplicati:latest
    container_name: duplicati
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    environment:
      - PUID=$PGID
      - PGID=$PUID
      - TZ=$TZ
      - DOCKER_MODS=linuxserver/mods:code-server-docker
    volumes:
      - $USERDIR/docker/duplicati:/config
      - $USERDIR:/source
      - /var/spool/cron/crontabs/<user>:/crontabs/<user>
      - /etc:/system
      - /opt:/opt-system 
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8200:8200
    restart: unless-stopped

  glances:
    image: vimagick/glances:latest
    container_name: glances
    security_opt:
      - apparmor:unconfined
    volumes:
      - $USERDIR/docker/glances:/etc/glances
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-w
    network_mode: host
    pid: host
    restart: unless-stopped

  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - "$USERDIR/docker/fail2ban:/data"
      - "$USERDIR/docker/traefik/log:/var/log/traefik:ro"
      - "$POOL/nextcloud:/var/log/nextcloud:ro"
    env_file:
      - "./fail2ban/fail2ban.env"
    restart: unless-stopped

  healthchecks:
    image: linuxserver/healthchecks
    container_name: healthchecks
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - SITE_ROOT=http://192.168.1.9:8798
      - SITE_NAME=healthchecks
      - DEFAULT_FROM_EMAIL=$SENDMAIL_ADDR
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_HOST_USER=$SENDMAIL_ADDR
      - EMAIL_HOST_PASSWORD=$SENDMAIL_PW
      - EMAIL_USE_TLS=True
      - ALLOWED_HOSTS=*
      - SUPERUSER_EMAIL=$CLOUDFLARE_EMAIL
      - SUPERUSER_PASSWORD=$HEALTHCHK_SU_PW
      - DEBUG=False
    volumes:
      - $USERDIR/docker/healthchecks:/config
    ports:
      - 8798:8000
    restart: unless-stopped

######Game/App servers#####

  minecraftbe:
    image: toasterlint/minecraft_bedrock:latest
    container_name: minecraftbe
    stdin_open: true
    tty: true
    volumes:
      - "$USERDIR/docker/minecraftbe:/bedrock-server/config"
      - "$USERDIR/docker/minecraftbe/worlds:/bedrock-server/worlds"
      - "$USERDIR/docker/minecraftbe/valid_known_packs.json:/bedrock-server/valid_known_packs.json"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    network_mode: host
    restart: unless-stopped

  thelounge:
    image: linuxserver/thelounge:latest
    container_name: thelounge
    security_opt:
      - no-new-privileges:true
    networks: 
      - proxy
    environment:
      - PUID=$PGID
      - PGID=$PUID
      - TZ=$TZ
    volumes:
      - $USERDIR/docker/thelounge:/config
    ports:
      - 9001:9000
    expose:
      - "9000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.thelounge.entrypoints=websecure
      - "traefik.http.routers.thelounge.middlewares=chain-oauth@file" #,middleware-whitelist"
    restart: unless-stopped

######Dashboards######

  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - 8443:443
      - 8080:80
    volumes: 
      - $USERDIR/docker/heimdall:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped

######Media Server & "PVR" Stack######

  emby:
    image: emby/embyserver:latest
    container_name: emby
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
#    expose: 
#      - 8096
    ports:
      - 8096:8096
    volumes:
      - "$USERDIR/docker/emby:/config"
      - "$POOL:/mnt/share1"
    environment:
      - UID=$PUID
      - GID=$PGID
      - GIDLIST=109,998
      - TZ=$TZ
    devices:
      - /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.emby.entrypoints=websecure"
      - "traefik.http.routers.emby.middlewares=chain-default@file"
      - "traefik.http.services.emby.loadbalancer.server.port=8096"
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - "9091:9091"
      - "49650:49650"
      - "49650:49650/udp"
    volumes:
      - "$USERDIR/docker/transmission:/config"
      - "$POOL/torrent:/t-downloads"
      - "$POOL/software:/mnt/samba/software"
      - "$POOL/torrent:/watch"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped
    
  sabnzbd:
    image: linuxserver/sabnzbd:2.3.9-0ubuntu1jcfp218.04-ls67
    container_name: sabnzbd
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - "8081:8080"
    volumes:
      - "$USERDIR/docker/sabnzbd:/config"
      - "$POOL/newsgroups:/downloads"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - "8989:8989"
    volumes:
      - "$USERDIR/docker/sonarr:/config"
      - "$POOL/tv:/tv"
      - "$POOL/newsgroups:/downloads"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped
    depends_on:
      - nzbhydra2

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - "7878:7878"
    volumes:
      - "$USERDIR/docker/radarr:/config"
      - "$POOL/movies:/movies"
      - "$POOL/newsgroups:/downloads"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped
    depends_on:
      - nzbhydra2

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - "6767:6767"
    volumes:
      - "$USERDIR/docker/bazarr:/config"
      - "$POOL/movies:/movies"
      - "$POOL/tv:/tv"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped
    depends_on:
      - radarr
      - sonarr

  nzbhydra2:
    image: linuxserver/nzbhydra2:latest
    container_name: nzbhydra2
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - "5076:5076"
    volumes:
      - "$USERDIR/docker/hydra2:/config"
      - "$POOL/newsgroups:/downloads"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped

  tinymediamanager:
    image: romancin/tinymediamanager:latest
    container_name: tinymediamanager
    security_opt:
      - no-new-privileges:true
    networks: 
      - mainstack
    ports:
      - "5800:5800"
      - "5900:5900"
    volumes:
      - "$USERDIR/docker/tinymediamanager:/config"
      - "$POOL/movies:/tmm-movies"
      - "$POOL/tv:/tmm-tv"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped

  youtube-dl:
    image: kmb32123/youtube-dl-server:latest
    container_name: youtube-dl
    networks: 
      - mainstack
    ports:
      - 6060:8080
    volumes:
      - $USERDIR/docker/youtube-dl:/youtube-dl
    restart: unless-stopped

######Nextcloud######

  db:
    restart: unless-stopped
    image: linuxserver/mariadb:latest
    container_name: nextcloud_db
    networks:
      - ncdb
    environment:
    - PUID=$PUID
    - PGID=$PGID
    - MYSQL_USER=nextcloud
    - MYSQL_PASSWORD=$NCMYSQL_PASS
    - MYSQL_DATABASE=nextcloud
    - MYSQL_ROOT_PASSWORD=$NCMYSQL_ROOT_PASS
    volumes:
      - $USERDIR/docker/nextcloud/mariadb:/config
      
  nextcloud:
    image: linuxserver/nextcloud:19.0.1-ls92
    container_name: nextcloud
    restart: unless-stopped
    networks:
      - proxy
      - ncdb
    depends_on:
      - db
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $USERDIR/docker/nextcloud:/config
      - $POOL/nextcloud:/data
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.nextcloud.entrypoints=websecure
      - traefik.http.routers.nextcloud.middlewares=chain-nextcloud@file

######Guacamole######
  guacdb:
    restart: unless-stopped
    image: linuxserver/mariadb:latest
    container_name: guacdb
    networks:
      - guacnetwork
    environment:
    - PUID=$PUID
    - PGID=$PGID
    - TZ=$TZ
    - MYSQL_USER=guacamole_user
    - MYSQL_PASSWORD=$NCMYSQL_PASS
    - MYSQL_DATABASE=guacamole_db
    - MYSQL_ROOT_PASSWORD=$NCMYSQL_ROOT_PASS
    volumes:
      - $USERDIR/docker/guacamole/mariadb:/config

  guacd:
    image: linuxserver/guacd:latest
    container_name: guacd
#    ports:
#      - 4822:4822
    networks:
      - guacnetwork
      - mainstack
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped

  guacamole:
    container_name: guacamole
    depends_on:
    - guacd
    - guacdb
    environment:
    -  GUACD_HOSTNAME=guacd
    -  MYSQL_HOSTNAME=guacdb
    -  MYSQL_DATABASE=guacamole_db
    -  MYSQL_PASSWORD=$NCMYSQL_PASS
    -  MYSQL_USER=guacamole_user
    image: guacamole/guacamole:latest
    links:
    - guacd
    - guacdb
    networks:
      - guacnetwork
      - proxy
    ports:
      - 8087:8080
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.guacamole.entrypoints=websecure
      - "traefik.http.routers.guacamole.middlewares=chain-oauth@file,middleware-add-guacamole@file"
    restart: unless-stopped
